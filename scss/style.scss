@use 'sass:math';

// МИКСИНЫ
@import 'base/mixins';

// ШРИФТЫ
// &display=swap - добавить при подключении через плагин
// @import url('https://fonts.googleapis.com/css?family=Montserrat:regular,500,700,800,900&display=swap');

// Подключить если есть локальные файлы шрифтов
@import 'fonts/fonts';

// Подключение иконочных шрифтов
// Подключить если есть файл иконочного шрифта
// @import 'fonts/icons';

// ПЕРЕМЕННЫЕ
$index: calc(1vw + 1vh);
$gutter: 30px;
$sideSmall: 26;
$sideBig: 36;
$depth: 4000px;
$transition: 0.75s cubic-bezier(0.075, 0.5, 0, 1);

// ШРИФТ ПО УМОЛЧАНИЮ
$fontFamily: raleway-3d, sans-serif;
$fontWaight: 300;
$fontSize: calc($index * 0.8); // где 18(px) - размер шрифта по умолчанию из макета
$lineHeight: 1.75;

// ОСНОВНЫЕ ЦВЕТА
$mainColor: #f0f0f0; // Цвет шрифта по умолчанию
$mainDarkColor: #000000;

// НАСТРОЙКИ
$minWidth: 320; // Минимальная ширина страницы
$maxWidth: 1920; // Ширина полотна (макета)
$maxWidthContainer: 0; // Ширина ограничивающего контейнера (0 = нет ограничения)
$containerPadding: 30; // Общий отступ у контейнера (30 = по 15px слева и справа, 0 = нет отступа)

$containerWidth: $maxWidthContainer + $containerPadding; // Ширина срабатывания первого брейкпоинта

// БРЕЙК-ПОИНТЫ
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// ТИП АДАПТИВА:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

//===================================================================
// ОБНУЛЕНИЕ И ОБЩИЕ ПАРАМЕТРЫ
@import 'base/null';

body {
  height: $depth;
  background-color: $mainDarkColor;
  // Скролл заблокирован
  .lock & {
    overflow: hidden;
    touch-action: none;
  }
  // Сайт загружен
  .loaded & {
    // opacity: 1;
  }
}

//===================================================================
// ОБОЛОЧКА
.wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  // Прижимаем footer
  > main {
    flex: 1 1 auto;
  }
  // Фикс для слайдеров
  > * {
    min-width: 0;
  }
}

//===================================================================
// ОГРАНИЧИВАЮЩИЙ КОНТЕЙНЕР
/*
(i) Стили будут применяться ко
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
  // Отзывчивая
  [class*='__container'] {
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
      margin: 0 auto;
    }
    @if ($containerPadding>0) {
      padding: 0 rem(math.div($containerPadding, 2));
    }
  }
} @else {
  // По брейк-поинтам
  [class*='__container'] {
    margin: 0 auto;
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
    } @else {
      @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
    @media (max-width: $pc) {
      max-width: rem(970);
    }
    @media (max-width: $tablet) {
      max-width: rem(750);
    }
    @media (max-width: $mobile) {
      max-width: none;
      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}

//===================================================================
// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных классов
// Для подключения/отключения конкретных стилей смотри base.scss
// @import 'base';

// Подключение стилей общих элементов проекта
@import 'common';

// Подключение стилей отдельных блоков
// @import 'header';
// @import 'footer';

// Подключение стилей отдельных страниц
// @import 'home';

.container {
  position: fixed;
  width: 100%;
  height: 100%;
  perspective: 1500px;
}

.gallery {
  transform-style: preserve-3d;
  height: 100%;
  opacity: 0;
  // transition: opacity 0.75s linear;
  .loaded & {
    opacity: 1;
  }
  // .gallery__frame
  &__frame {
  }
}

.frame {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  transition: $transition, opacity 0.75s ease;
  will-change: transform;
  transform-style: preserve-3d;
  &_bg {
    background-color: rgba($mainDarkColor, 0.87);
  }
  // .frame__content
  &__content {
  }
  // .frame__text
  &__text {
  }
  // .frame__media
  &__media {
  }
}

.text-frame {
  &_left,
  &_right {
    .text-frame__title {
      text-align: left;
      font-size: calc($index * 3);
    }
    & > * {
      position: relative;
    }
  }
  &_left {
    & > * {
      right: 18vw;
    }
  }
  &_right {
    & > * {
      left: 18vw;
    }
  }
  // .text-frame__title
  &__title {
    font-size: calc($index * 3.3);
    text-align: center;
  }
  // .text-frame__text
  &__text {
    max-width: 30vw;
    margin-top: 3vh;
  }
}

.media-frame {
  position: relative;
  width: calc($index * $sideSmall);
  height: calc($index * $sideBig);
  background-position: center;
  background-size: cover;
  &_left {
    transform: translateX(calc(-50% - $gutter));
  }
  &_right {
    transform: translateX(calc(50% + $gutter));
  }
}

video {
  &.media-frame {
    width: calc($index * $sideBig);
    height: calc($index * $sideSmall);
  }
}
